//----------------------------------------------------//
// Mixins & Includes                                  //
//----------------------------------------------------//
@mixin notext {
  overflow: hidden;
  text-indent: -9999px;
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

.centered {
  display: table;
  width: 100%;
  height: 100%;
  > * {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
  }
}

// PLACEHOLDER MIXIN
@mixin placeholderColor($input-text-color) {
  &::-webkit-input-placeholder {
    color: $input-text-color;
  }
  &:-moz-placeholder {
    color: $input-text-color;
    opacity: 1;
  }
  &::-moz-placeholder {
    color: $input-text-color;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    color: $input-text-color;
  }
  &:focus:-moz-placeholder {
    color: transparent;
    opacity: 1;
  }
  &:focus::-moz-placeholder {
    color: transparent;
    opacity: 1;
  }
  &:focus::-webkit-input-placeholder {
    color: transparent;
  }
  &:focus:-ms-input-placeholder {
    color: transparent;
  }
  &:focus::placeholder {
    color: transparent;
  }
}

@mixin clearfix {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}

// Clear select without default button
@mixin clearSelect {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}

//elements get appended with "__" and the $name
@mixin e($name) {
  @at-root   #{&}__#{$name} {
    @content;
  }
}

//modifiers get appended with "--" and the $name
@mixin m($name) {
  @at-root   #{&}--#{$name} {
    @content;
  }
}

@mixin b($point) {
  @if $point == large {
    @media (min-width: $brake-point-lg + 'px') {
      @content;
    }
  } @else if $point == desktop {
    @media (max-width: $brake-point-lg - 1 + 'px') {
      @content;
    }
  } @else if $point == tablet {
    @media (max-width: $brake-point-md - 1 + 'px') {
      @content;
    }
  } @else if $point == mobile {
    @media (max-width: $brake-point-sm - 1 + 'px') {
      @content;
    }
  } @else {
    @media (max-width: $point + 'px') {
      @content;
    }
  }
}

@mixin ie() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin before-img($width, $height) {
  content: '';
  display: block;
  position: absolute;
  width: $width;
  height: $height;
}

//----------------------------------------------------//
// REM FONT_SIZE WITH FALLBACK 						  //
//----------------------------------------------------//
// USAGE:
// p {
//   @include font-size(14px)
// }

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin gradient($top, $bottom) {
  background: $top;
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom));
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%);
  background: -o-linear-gradient(top, $top 0%, $bottom 100%);
  background: -ms-linear-gradient(top, $top 0%, $bottom 100%);
  background: linear-gradient(to bottom, $top 0%, $bottom 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$top}', endColorstr='#{$bottom} ', GradientType=0);
}

@mixin textCut($col, $height) {
  display: -webkit-box;
  -webkit-line-clamp: $col;
  -webkit-box-orient: vertical;
  overflow: hidden;
  max-height: $height;
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%)
}

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if $asset-pipeline == true {
      src: font-url('#{$file-path}.eot');
      src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
      font-url('#{$file-path}.woff') format('woff'),
      font-url('#{$file-path}.ttf') format('truetype'),
      font-url('#{$file-path}.svg##{$font-family}') format('svg');
    } @else {
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
      url('#{$file-path}.woff') format('woff'),
      url('#{$file-path}.ttf') format('truetype'),
      url('#{$file-path}.svg##{$font-family}') format('svg');
    }
  }
}

@mixin trs {
  transition: $global-transition;
}

%rlist {
  font-size: 0;
  word-spacing: -.36em;
  line-height: 0;
}

%ulist {
  font-size: $main-font-size;
  line-height: $main-font-height;
  word-spacing: normal;
  display: inline-block;
}



@mixin circle($width, $color) {
  width: $width;
  height: $width;
  -webkit-border-radius: $width/2;
  -moz-border-radius: $width/2;
  -o-border-radius: $width/2;
  -ms-border-radius: $width/2;
  border-radius: $width/2;
  background-color: $color;
}

@mixin triangle($width, $dir, $color) {
  width: 0;
  height: 0;
  display: block;
  @if $dir==up {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-bottom: $width solid $color;
  }
  @else if $dir==down {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-top: $width solid $color;
  }
  @else if $dir==left {
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-right: $width solid $color;
  }
  @else if $dir==right {
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-left: $width solid $color;
  }
}

.hide {
  display: none!important; // for js
}
